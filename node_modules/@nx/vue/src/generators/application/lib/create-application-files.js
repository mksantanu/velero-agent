"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createApplicationFiles = createApplicationFiles;
const path = require("path");
const devkit_1 = require("@nx/devkit");
const js_1 = require("@nx/js");
const create_ts_config_1 = require("../../../utils/create-ts-config");
const onboarding_1 = require("nx/src/nx-cloud/utilities/onboarding");
async function createApplicationFiles(tree, options) {
    const onBoardingStatus = await (0, onboarding_1.createNxCloudOnboardingURLForWelcomeApp)(tree, options.nxCloudToken);
    const connectCloudUrl = onBoardingStatus === 'unclaimed' &&
        (await (0, onboarding_1.getNxCloudAppOnBoardingUrl)(options.nxCloudToken));
    (0, devkit_1.generateFiles)(tree, path.join(__dirname, '../files/common'), options.appProjectRoot, {
        ...options,
        offsetFromRoot: (0, devkit_1.offsetFromRoot)(options.appProjectRoot),
        title: options.projectName,
    });
    (0, devkit_1.generateFiles)(tree, path.join(__dirname, '../files/nx-welcome', onBoardingStatus), options.appProjectRoot, {
        ...options,
        connectCloudUrl,
        offsetFromRoot: (0, devkit_1.offsetFromRoot)(options.appProjectRoot),
        title: options.projectName,
    });
    if (options.style !== 'none') {
        (0, devkit_1.generateFiles)(tree, path.join(__dirname, '../files/stylesheet'), options.appProjectRoot, {
            ...options,
            offsetFromRoot: (0, devkit_1.offsetFromRoot)(options.appProjectRoot),
            title: options.projectName,
        });
    }
    if (options.routing) {
        (0, devkit_1.generateFiles)(tree, path.join(__dirname, '../files/routing'), options.appProjectRoot, {
            ...options,
            offsetFromRoot: (0, devkit_1.offsetFromRoot)(options.appProjectRoot),
            title: options.projectName,
        });
    }
    (0, create_ts_config_1.createTsConfig)(tree, options.appProjectRoot, 'app', options, (0, js_1.getRelativePathToRootTsConfig)(tree, options.appProjectRoot));
}
