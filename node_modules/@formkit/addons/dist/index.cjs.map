{"version":3,"sources":["../src/plugins/autoAnimatePlugin.ts","../src/plugins/multiStep/multiStepPlugin.ts","../src/plugins/multiStep/schema.ts","../src/plugins/multiStep/sections/wrapper.ts","../src/plugins/multiStep/sections/badge.ts","../src/plugins/multiStep/sections/stepActions.ts","../src/plugins/multiStep/sections/stepInner.ts","../src/plugins/multiStep/sections/stepNext.ts","../src/plugins/multiStep/sections/stepOuter.ts","../src/plugins/multiStep/sections/stepPrevious.ts","../src/plugins/multiStep/sections/steps.ts","../src/plugins/multiStep/sections/stepIcon.ts","../src/plugins/multiStep/sections/tab.ts","../src/plugins/multiStep/sections/tabLabel.ts","../src/plugins/multiStep/sections/tabs.ts","../src/plugins/multiStep/sections/multiStepOuter.ts","../src/plugins/floatingLabels/floatingLabelsPlugin.ts","../src/plugins/localStoragePlugin.ts","../src/plugins/autoHeightTextarea.ts"],"names":["createSection","steps","step","tabs","tab","node","updateTotalErrorCount","whenAvailable","calculateLabelOffset","nodeEl","observer","controlNode","loadValue","undefine"],"mappings":"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","sourcesContent":["import {\n  FormKitNode,\n  FormKitSchemaComponent,\n  FormKitPlugin,\n  isDOM,\n} from '@formkit/core'\nimport autoAnimate, { AutoAnimateOptions } from '@formkit/auto-animate'\nimport { eachSection } from '@formkit/inputs'\nimport { FormKitSchemaDOMNode } from 'packages/core/src'\n\nconst pendingIds: Map<string, AutoAnimateOptions | undefined> = new Map()\nconst optionOverrides = new Map<string, AutoAnimateOptions | undefined>()\n\nlet autoAnimateOptionsId = 0\n\nlet observer: MutationObserver | null = null\nlet observerTimeout: ReturnType<typeof setTimeout> | number = 0\n\n/**\n * Create a new mutation observer that checks for the document for ids. We do\n * this instead of iterating over the mutations because getElementById is by far\n * the fastest way check for an element in the DOM, much faster that iterating\n * over the mutations themselves.\n */\nfunction createObserver() {\n  observeIds()\n  observer = new MutationObserver(() => {\n    observeIds()\n    if (!pendingIds.size && observer) {\n      observer.disconnect()\n      observer = null\n    }\n  })\n  observer.observe(document, { childList: true, subtree: true })\n}\n\nfunction observeIds() {\n  pendingIds.forEach((options, id) => {\n    const outer = document.getElementById(id)\n    if (outer) {\n      clearTimeout(observerTimeout)\n      pendingIds.delete(id)\n      observerTimeout = setTimeout(() => {\n        const targets = document.querySelectorAll('[data-auto-animate]')\n        targets.forEach((target) => {\n          // get the value of data-auto-animate\n          let overrideOptions: AutoAnimateOptions | undefined\n          const optionsId = target.getAttribute('data-auto-animate')\n          if (optionsId) {\n            overrideOptions = optionOverrides.get(optionsId)\n          }\n          autoAnimate(target as HTMLElement, overrideOptions || options || {})\n        })\n      }, 250)\n    }\n  })\n}\n\n/**\n * Adds auto-animate to each input automatically:\n *\n * @example\n *\n * ```javascript\n * import { createApp } from 'vue'\n * import App from 'App.vue'\n * import { createAutoAnimatePlugin } from '@formkit/addons'\n * import { plugin, defaultConfig } from '@formkit/vue'\n *\n * createApp(app).use(plugin, defaultPlugin({\n *   plugins: [\n *     createAutoAnimatePlugin({\n *       // optional config\n *       duration: 250,\n *       easing: 'ease-in-out',\n *       delay: 0,\n *     },\n *     {\n *       // optional animation targets object\n *       global: ['outer', 'inner'],\n *       form: ['form'],\n *       repeater: ['items'],\n *     })\n *   ]\n * }))\n * ```\n *\n * @param options - {@link https://github.com/formkit/auto-animate/blob/master/src/index.ts#L596 | AutoAnimateOptions }\n * @param animationTargets - A map of input types and an array of their sections that should be animated.\n *\n * @returns\n * {@link @formkit/core#FormKitPlugin | FormKitPlugin}\n *\n * @public\n */\nexport function createAutoAnimatePlugin(\n  options?: AutoAnimateOptions,\n  animationTargets: Record<string, string[]> = {}\n): FormKitPlugin {\n  return (node: FormKitNode) => {\n    node.on('created', () => {\n      if (typeof node.props.definition?.schema === 'function') {\n        if (typeof window === undefined) return\n\n        // make a copy of the original schema\n        const originalSchema = node.props.definition.schema\n\n        // add an outer wrapper id or get the current one\n        node.props.definition.schema = (extensions) => {\n          const schema = originalSchema(extensions)\n          const finalSchema = Array.isArray(schema) ? schema[0] : schema\n\n          eachSection(\n            finalSchema,\n            (section: FormKitSchemaComponent | FormKitSchemaDOMNode) => {\n              if (isDOM(section)) {\n                let isAnimationTarget = false\n                const sectionName = section?.meta?.section\n                let instanceId: boolean | string = true\n\n                // If we have explicit autoAnimate meta set, use that\n                if (section?.meta?.autoAnimate) {\n                  isAnimationTarget = true\n\n                  if (typeof section.meta.autoAnimate === 'object') {\n                    const newOptions = Object.assign(\n                      {},\n                      options,\n                      section.meta.autoAnimate\n                    )\n                    instanceId = `${node.props.id}-${autoAnimateOptionsId++}`\n                    optionOverrides.set(instanceId, newOptions)\n                  }\n                }\n\n                // if didn't have meta but we have a section name, check if it's a known animation target\n                if (\n                  !isAnimationTarget &&\n                  sectionName &&\n                  typeof sectionName === 'string'\n                ) {\n                  if (\n                    animationTargets.global?.includes(sectionName) ||\n                    animationTargets[node.props.type]?.includes(sectionName)\n                  ) {\n                    isAnimationTarget = true\n                  }\n                }\n\n                // bail if we we're not a match\n                if (!isAnimationTarget) return\n\n                // add the auto-animate attribute which our observer will pick up\n                if (!section?.attrs) {\n                  section.attrs = { 'data-auto-animate': instanceId }\n                } else {\n                  Object.assign(section.attrs, {\n                    'data-auto-animate': instanceId,\n                  })\n                }\n\n                // add the node id to the pending list\n                if (node.props.id) {\n                  pendingIds.set(node.props.id, options)\n                }\n              }\n            }\n          )\n          return finalSchema\n        }\n      }\n      if (!observer && typeof window !== 'undefined') createObserver()\n    })\n  }\n}\n","import {\n  FormKitNode,\n  FormKitPlugin,\n  createMessage,\n  FormKitFrameworkContext,\n  isPlaceholder,\n} from '@formkit/core'\nimport { whenAvailable } from '@formkit/utils'\nimport type { FormKitSlotData, FormKitInputs } from '@formkit/inputs'\nimport { multiStep, step } from './schema'\n\n/* <declare> */\n\n/**\n * Extend FormKitNode with Multi-step helper functions.\n */\ndeclare module '@formkit/core' {\n  interface FormKitNodeExtensions {\n    next(): void\n    previous(): void\n    goTo(step: number | string): void\n  }\n}\n/* </declare> */\n\n/* <declare> */\ndeclare module '@formkit/inputs' {\n  interface FormKitInputProps<Props extends FormKitInputs<Props>> {\n    'multi-step': {\n      type: 'multi-step'\n      value?: Record<string, any>\n      allowIncomplete?: boolean\n      tabStyle?: 'tab' | 'progress'\n      hideProgressLabels?: boolean\n      validStepIcon?: string\n      beforeStepChange?: BeforeStepChange\n    }\n    step: {\n      beforeStepChange?: BeforeStepChange\n      nextAttrs?: Record<string, any>\n      nextLabel?: string\n      previousAttrs?: Record<string, any>\n      previousLabel?: string\n      type: 'step'\n      validStepIcon?: string\n      value?: Record<string, any>\n    }\n  }\n\n  interface FormKitInputSlots<Props extends FormKitInputs<Props>> {\n    'multi-step': FormKitMultiStepSlots<Props>\n    step: FormKitStepSlots<Props>\n  }\n}\n\n/**\n * The node type that is augmented with next and previous and goTo functions.\n *\n * @public\n */\nexport type FormKitMultiStepNode = FormKitNode & MultiStepNodeAdditions\n\n/**\n * Additional arguments that are added to the FormKitNode of a multistep input.\n *\n * @public\n */\nexport interface MultiStepNodeAdditions {\n  next: () => void\n  previous: () => void\n  goTo: (target: number | string) => void\n}\n\n/**\n * @public\n */\nexport interface MultiStepSlotData {\n  steps: Array<FormKitMultiStepSlotData>\n  allowIncomplete?: boolean\n  tabStyle: 'tab' | 'progress'\n  hideProgressLabels: boolean\n  validStepIcon: string | undefined\n  activeStep: string\n  beforeStepChange?: BeforeStepChange\n  node: FormKitMultiStepNode\n  handlers: FormKitFrameworkContext['handlers'] & MultiStepHandlers\n}\n\nexport interface MultiStepHandlers {\n  incrementStep: (\n    delta: number,\n    currentStep: FormKitFrameworkContext | undefined\n  ) => () => void\n  triggerStepValidations: (step: FormKitFrameworkContext) => void\n  showStepErrors: (step: FormKitFrameworkContext) => boolean | undefined\n  setActiveStep: (step: FormKitFrameworkContext) => (e?: Event) => void\n}\n/**\n * Slot data unique to the step input.\n *\n * @public\n */\nexport interface StepSlotData {\n  beforeStepChange?: BeforeStepChange\n  makeActive: () => void\n  blockingCount: number\n  errorCount: number\n  hasBeenVisited: true | undefined\n  isActiveStep: boolean\n  isFirstStep: boolean\n  isLastStep: boolean\n  isValid: boolean\n  nextAttrs?: Record<string, any>\n  nextLabel?: string\n  ordered: boolean\n  previousAttrs?: Record<string, any>\n  previousLabel?: string\n  showStepErrors: boolean\n  stepName: string\n  steps: Array<FormKitMultiStepSlotData>\n  stepIndex: number\n  totalErrorCount: number\n  validStepIcon?: string\n  handlers: FormKitFrameworkContext['handlers'] & StepHandlers\n}\n\nexport interface StepHandlers {\n  incrementStep: (delta: number) => () => void\n  next: () => void\n  previous: () => void\n}\n\n/**\n * @public\n */\nexport interface FormKitMultiStepSlots<Props extends FormKitInputs<Props>> {\n  multiStepOuter: FormKitSlotData<Props, MultiStepSlotData>\n  wrapper: FormKitSlotData<Props, MultiStepSlotData>\n  tabs: FormKitSlotData<Props, MultiStepSlotData>\n  tab: FormKitSlotData<Props, MultiStepSlotData>\n  tabLabel: FormKitSlotData<\n    Props,\n    MultiStepSlotData & {\n      step: FormKitFrameworkContext\n      index: number\n    }\n  >\n  badge: FormKitSlotData<\n    Props,\n    MultiStepSlotData & {\n      step: FormKitFrameworkContext\n      index: number\n    }\n  >\n  validStepIcon: FormKitSlotData<\n    Props,\n    MultiStepSlotData & {\n      step: FormKitFrameworkContext\n      index: number\n    }\n  >\n  steps: FormKitSlotData<Props, MultiStepSlotData>\n  default: FormKitSlotData<Props, MultiStepSlotData>\n}\n\n/**\n * @public\n */\nexport interface FormKitStepSlots<Props extends FormKitInputs<Props>> {\n  stepInner: FormKitSlotData<Props, StepSlotData>\n  stepActions: FormKitSlotData<Props, StepSlotData>\n  stepNext: FormKitSlotData<Props, StepSlotData>\n  stepPrevious: FormKitSlotData<Props, StepSlotData>\n  default: FormKitSlotData<Props, StepSlotData>\n}\n\n/* </declare> */\n\nconst isBrowser = typeof window !== 'undefined'\n\n/**\n * The typing for the beforeStepChange function.\n *\n * @public\n */\nexport interface BeforeStepChange {\n  (data: StepChangeData): any\n}\n\nexport interface StepChangeData<T = unknown> {\n  currentStep: FormKitFrameworkContext<T>\n  targetStep: FormKitFrameworkContext<T>\n  delta: number\n}\n\n/**\n * The typing for the slot data for a FormKit multi-step input.\n * @public\n */\nexport type FormKitMultiStepSlotData = FormKitFrameworkContext<\n  Record<string, any>\n> &\n  StepSlotData\n\n/**\n * The options to be passed to {@link createMultiStepPlugin | createMultiStepPlugin}\n *\n * @public\n */\nexport interface MultiStepOptions {\n  allowIncomplete?: boolean\n  hideProgressLabels?: boolean\n  tabStyle?: 'tab' | 'progress'\n}\n\n/**\n * Coverts a camelCase string to a title case string\n *\n * @param str - The string to convert\n * @returns string\n */\nconst camel2title = (str: string) => {\n  if (!str) return str\n  return str\n    .replace(/([A-Z])/g, (match: string) => ` ${match}`)\n    .replace(/^./, (match: string) => match.toUpperCase())\n    .trim()\n}\n\n/**\n * Compares steps to DOM order and reorders steps if needed\n */\nfunction orderSteps(node: FormKitNode, steps: FormKitFrameworkContext[]) {\n  if (!isBrowser || !steps) return steps\n  const orderedSteps = [...steps]\n  orderedSteps.sort((a, b) => {\n    const aEl = node.props.__root?.getElementById(a.id)\n    const bEl = node.props.__root?.getElementById(b.id)\n    if (!aEl || !bEl) return 0\n    return aEl.compareDocumentPosition(bEl) === 2 ? 1 : -1\n  })\n  orderedSteps.map((step) => {\n    step.ordered = true\n  })\n  return orderedSteps\n}\n\n/**\n * Iterates through each step and sets props to help\n * determine step positioning within the multi-step.\n *\n * @param steps - The steps to iterate through\n */\nfunction setNodePositionProps(steps: FormKitFrameworkContext[]) {\n  if (!steps) return\n  steps.forEach((step: FormKitFrameworkContext, index: number) => {\n    step.isFirstStep = index === 0\n    step.isLastStep = index === steps.length - 1\n    step.stepIndex = index\n    step.steps = steps\n  })\n}\n\nfunction showStepErrors(step: FormKitFrameworkContext) {\n  if (!step.showStepErrors) return\n  return (\n    parseInt(step.blockingCount as string) +\n      parseInt(step.errorCount as string) >\n    0\n  )\n}\n\n/**\n * Determines if the target step can be navigated to based on current\n * configuration options and the state of the current step.\n *\n * @param currentStep - The current step\n * @param targetStep - The target step\n */\nasync function isTargetStepAllowed(\n  currentStep: FormKitFrameworkContext,\n  targetStep: FormKitFrameworkContext\n): Promise<boolean> {\n  if (currentStep === targetStep) return true\n  const { allowIncomplete } = currentStep.node.parent?.props || {}\n  const parentNode = currentStep.node.parent\n  const currentStepIndex = parentNode?.props.steps.indexOf(currentStep)\n  const targetStepIndex = parentNode?.props.steps.indexOf(targetStep)\n\n  // show the current step errors because this step has\n  // been visited.\n  const currentStepIsValid = triggerStepValidations(currentStep)\n  currentStep.showStepErrors = true\n\n  // if we are navigating forward, check our current step is complete\n  if (targetStepIndex >= currentStepIndex) {\n    // if the current step is invalid and we do not allow incomplete\n    // then prevent navigation\n    if (!currentStepIsValid && !allowIncomplete) {\n      return false\n    }\n  }\n\n  // check how many steps we need to step forward\n  // and then check that each intermediate step is valid\n  const delta = targetStepIndex - currentStepIndex\n  for (let i = 0; i < delta; i++) {\n    const intermediateStep = parentNode?.props.steps[currentStepIndex + i]\n    const stepIsAllowed = allowIncomplete || intermediateStep.state?.valid\n    if (!stepIsAllowed) {\n      return false\n    }\n  }\n\n  // check if there is a function for the stepChange guard\n  const beforeStepChange =\n    currentStep.node.props.beforeStepChange ||\n    currentStep.node.parent?.props.beforeStepChange\n\n  if (beforeStepChange && typeof beforeStepChange === 'function') {\n    if (parentNode) {\n      parentNode?.store.set(\n        /* #__PURE__ */ createMessage({\n          key: 'loading',\n          value: true,\n          visible: false,\n        })\n      )\n      parentNode.props.disabled = true\n      currentStep.disabled = true\n    }\n    const result = await beforeStepChange({\n      currentStep,\n      targetStep,\n      delta: targetStepIndex - currentStepIndex,\n    })\n    if (parentNode) {\n      parentNode?.store.remove('loading')\n      parentNode.props.disabled = false\n      currentStep.disabled = false\n    }\n    if (typeof result === 'boolean' && !result) return false\n  }\n\n  return true\n}\n\n/**\n * Changes the active step to the target step if the target step is allowed.\n *\n * @param targetStep - The target step\n */\nasync function setActiveStep(targetStep: FormKitFrameworkContext, e?: Event) {\n  if (e) {\n    e.preventDefault()\n  }\n  if (targetStep && targetStep.node.name && targetStep.node.parent) {\n    const currentStep = targetStep.node.parent.props.steps.find(\n      (step: FormKitFrameworkContext) =>\n        step.node.name === targetStep.node.parent?.props.activeStep\n    )\n    const stepIsAllowed = await isTargetStepAllowed(currentStep, targetStep)\n    if (stepIsAllowed && targetStep.node.parent.context) {\n      targetStep.node.parent.props.activeStep = targetStep.node.name\n    }\n  }\n}\n\n/**\n * Changes the current step by the delta value if the target step is allowed.\n *\n * @param delta - The number of steps to increment or decrement\n * @param step - The current step\n */\nasync function incrementStep(\n  delta: number,\n  currentStep: FormKitFrameworkContext\n) {\n  if (currentStep && currentStep.node.name && currentStep.node.parent) {\n    const steps = currentStep.node.parent.props.steps\n    const stepIndex = currentStep.stepIndex\n    const targetStep = steps[(stepIndex as number) + delta]\n    if (!targetStep) return\n    const stepIsAllowed = await isTargetStepAllowed(currentStep, targetStep)\n\n    if (targetStep && stepIsAllowed) {\n      currentStep.node.parent.props.activeStep = targetStep.node.name\n    }\n  }\n}\n\n/**\n * Causes the display of any validation errors on the target step.\n *\n * @param step - The current step\n * @returns Boolean\n */\nfunction triggerStepValidations(step: FormKitFrameworkContext) {\n  step.node.walk((n) => {\n    n.store.set(\n      /* #__PURE__ */ createMessage({\n        key: 'submitted',\n        value: true,\n        visible: false,\n      })\n    )\n  })\n  return (\n    step.node.context?.state.valid || step.node.parent?.props.allowIncomplete\n  )\n}\n\nfunction initEvents(node: FormKitNode, el: Element) {\n  if (!(el instanceof HTMLElement)) return\n  el.addEventListener('keydown', (event: KeyboardEvent) => {\n    if (event.target instanceof HTMLButtonElement) {\n      if (\n        event.key === 'Tab' &&\n        'data-next' in event.target?.attributes &&\n        !event.shiftKey\n      ) {\n        event.preventDefault()\n        const activeStepContext = node.children.find(\n          (step) => !isPlaceholder(step) && step.name === node.props.activeStep\n        ) as FormKitNode | undefined\n        if (activeStepContext && activeStepContext.context) {\n          incrementStep(1, activeStepContext.context)\n        }\n      }\n    }\n  })\n}\n\nfunction createSSRStepsFromTabs(tabs: Record<string, any>[]) {\n  if (!tabs || !tabs.length) return []\n  // if our tabs object is a fragment, then loop over the children\n  // otherwise loop directly\n  const tabsToRender =\n    tabs[0].type == Symbol.for('v-fgt') && tabs[0].children\n      ? tabs[0].children\n      : tabs\n\n  const placeholderTabs = tabsToRender.map(\n    (tab: Record<string, any>, index: number) => {\n      return {\n        __isPlaceholder: true,\n        stepName: tab.props?.label || camel2title(tab.props?.name),\n        isFirstStep: index === 0,\n        isLastStep: index === tabs.length - 1,\n        isActiveStep: index === 0,\n        node: {\n          name: tab.props?.name,\n        },\n      }\n    }\n  )\n  return placeholderTabs\n}\n\nfunction createPreRenderStepsFunction(node: FormKitNode) {\n  return () => {\n    if (!node.context || node.props.steps) return\n    // call the default slot to pre-render child steps\n    // for SSR support\n    let tabs = []\n    if (\n      node.context.slots &&\n      (node.context.slots as Record<string, () => any>).default\n    ) {\n      tabs = (node.context.slots as Record<string, () => any>).default()\n    }\n    node.props.steps = node.props.steps || createSSRStepsFromTabs(tabs)\n    node.context.stepCount = node.props.steps.length\n  }\n}\n\n/**\n * Creates a new multi-step plugin.\n *\n * @param options - The options of {@link MultiStepOptions | MultiStepOptions} to pass to the plugin\n *\n * @returns A {@link @formkit/core#FormKitPlugin | FormKitPlugin}\n *\n * @public\n */\nexport function createMultiStepPlugin(\n  options?: MultiStepOptions\n): FormKitPlugin {\n  let isFirstStep = true\n\n  const multiStepPlugin = (node: FormKitNode) => {\n    if (node.props.type === 'multi-step') {\n      if (!node.context) return\n\n      isFirstStep = true // reset variable, next step will be first step in multistep\n      node.addProps(['steps', 'tabs', 'activeStep'])\n\n      node.context.fns.preRenderSteps = createPreRenderStepsFunction(node)\n      node.context.fns.getStepCount = () => {\n        if (!node.context) return\n        return node.context.stepCount\n      }\n      node.context.fns.getSteps = () => {\n        if (!node.context) return\n        return node.context.steps\n      }\n\n      node.props.allowIncomplete =\n        typeof node.props.allowIncomplete === 'boolean'\n          ? node.props.allowIncomplete\n          : typeof options?.allowIncomplete === 'boolean'\n          ? options?.allowIncomplete\n          : true\n      node.props.hideProgressLabels =\n        typeof node.props.hideProgressLabels === 'boolean'\n          ? node.props.hideProgressLabels\n          : options?.hideProgressLabels || false\n      node.props.tabStyle = node.props.tabStyle || options?.tabStyle || 'tab'\n\n      node.context.handlers.triggerStepValidations = triggerStepValidations\n      node.context.handlers.showStepErrors = showStepErrors\n\n      node.on('created', () => {\n        if (!node.context) return\n\n        node.extend('next', {\n          get: (node) => () => {\n            incrementStep(\n              1,\n              node?.props?.steps.find(\n                (step: Record<string, any>) => step.isActiveStep\n              )\n            )\n          },\n          set: false,\n        })\n        node.extend('previous', {\n          get: (node) => () => {\n            incrementStep(\n              -1,\n              node?.props?.steps.find(\n                (step: Record<string, any>) => step.isActiveStep\n              )\n            )\n          },\n          set: false,\n        })\n        node.extend('goTo', {\n          get: (node) => (target: number | string) => {\n            if (typeof target === 'number') {\n              const targetStep = node.props.steps[target]\n              setActiveStep(targetStep)\n            } else if (typeof target === 'string') {\n              const targetStep = node.props.steps.find(\n                (step: Record<string, any>) => step.node.name === target\n              )\n              setActiveStep(targetStep)\n            }\n          },\n          set: false,\n        })\n\n        whenAvailable(\n          `${node.props.id}`,\n          (el) => {\n            initEvents(node, el)\n          },\n          node.props.__root\n        )\n      })\n\n      node.on('child', ({ payload: childNode }) => {\n        // remove placeholder steps\n        if (node.props.steps && node.props.steps.length) {\n          node.props.steps = node.props.steps.filter(\n            (step: Record<string, any>) => !step.__isPlaceholder\n          )\n        }\n        node.props.steps =\n          Array.isArray(node.props.steps) && node.props.steps.length > 0\n            ? [...node.props.steps, childNode.context]\n            : [childNode.context]\n        node.props.steps = orderSteps(node, node.props.steps)\n        setNodePositionProps(node.props.steps)\n\n        childNode.props.stepName =\n          childNode.props.label || camel2title(childNode.name)\n        childNode.props.errorCount = 0\n        childNode.props.blockingCount = 0\n        childNode.props.isActiveStep = isFirstStep\n        isFirstStep = false\n\n        node.props.activeStep = node.props.activeStep\n          ? node.props.activeStep\n          : node.props.steps[0]\n          ? node.props.steps[0].node.name\n          : ''\n      })\n\n      node.on('prop:activeStep', ({ payload }) => {\n        node.children.forEach((child) => {\n          if (isPlaceholder(child)) return\n          child.props.isActiveStep = child.name === payload\n          if (isBrowser && child.name === payload) {\n            const el = node.props.__root?.querySelector(\n              `[aria-controls=\"${child.props.id}\"]`\n            )\n            if (el instanceof HTMLButtonElement) {\n              el.focus()\n            }\n          }\n        })\n      })\n\n      node.on('childRemoved', ({ payload: childNode }) => {\n        let removedStepIndex = -1\n        childNode.props.ordered = false\n        node.props.steps = node.props.steps.filter(\n          (step: FormKitFrameworkContext, index: number) => {\n            if (step.node.name !== childNode.name) {\n              return true\n            }\n            removedStepIndex = index\n            return false\n          }\n        )\n        setNodePositionProps(node.props.steps)\n        // if the child that was removed was the active step\n        // then fallback to the next available step\n        if (node.props.activeStep === childNode.name) {\n          const targetIndex = removedStepIndex > 0 ? removedStepIndex - 1 : 0\n          node.props.activeStep = node.props.steps[targetIndex]\n            ? node.props.steps[targetIndex].node.name\n            : ''\n        }\n      })\n    } else if (\n      node.props.type === 'step' &&\n      node.parent?.props.type === 'multi-step'\n    ) {\n      if (!node.context || !node.parent || !node.parent.context) return\n\n      node.addProps([\n        'isActiveStep',\n        'isFirstStep',\n        'isLastStep',\n        'stepName',\n        'errorCount',\n        'blockingCount',\n        'totalErrorCount',\n        'showStepErrors',\n        'isValid',\n        'hasBeenVisited',\n        'ordered',\n      ])\n      const parentNode = node.parent\n\n      node.on('created', () => {\n        if (!node.context || !parentNode.context) return\n\n        whenAvailable(\n          `${node.props.id}`,\n          () => {\n            parentNode.props.steps = orderSteps(node, parentNode.props.steps)\n            setNodePositionProps(parentNode.props.steps)\n          },\n          node.props.__root\n        )\n      })\n\n      if (node.context && parentNode.context) {\n        parentNode.context.handlers.setActiveStep = (\n          stepNode: FormKitFrameworkContext\n        ) => setActiveStep.bind(null, stepNode)\n\n        node.context.handlers.incrementStep = (delta: number) => () =>\n          incrementStep(delta, node.context!)\n\n        node.context.makeActive = () => {\n          setActiveStep(node.context as FormKitFrameworkContext)\n        }\n\n        node.context.handlers.next = () =>\n          incrementStep(1, node.context as FormKitFrameworkContext)\n        node.context.handlers.previous = () =>\n          incrementStep(-1, node.context as FormKitFrameworkContext)\n      }\n\n      node.on('count:errors', ({ payload: count }) => {\n        node.props.errorCount = count\n      })\n      node.on('count:blocking', ({ payload: count }) => {\n        node.props.blockingCount = count\n      })\n\n      function updateTotalErrorCount(node: FormKitNode) {\n        node.props.totalErrorCount =\n          node.props.errorCount + node.props.blockingCount\n      }\n      node.on('prop:errorCount', () => updateTotalErrorCount(node))\n      node.on('prop:blockingCount', () => updateTotalErrorCount(node))\n      node.on('prop:totalErrorCount', () => {\n        node.props.isValid = node.props.totalErrorCount <= 0\n      })\n\n      node.on('message-added', ({ payload }) => {\n        if (payload.key === 'submitted') {\n          updateTotalErrorCount(node)\n          if (node.context) {\n            triggerStepValidations(node.context)\n            node.props.showStepErrors = true\n          }\n        }\n      })\n\n      node.on('prop:isActiveStep', () => {\n        if (!node.props.hasBeenVisited && node.props.isActiveStep) {\n          node.props.hasBeenVisited = true\n        }\n      })\n    } else if (node.parent?.props.type === 'multi-step') {\n      console.warn(\n        'Invalid FormKit input location. <FormKit type=\"multi-step\"> should only have <FormKit type=\"step\"> inputs as immediate children. Failure to wrap child inputs in <FormKit type=\"step\"> can lead to undesired behaviors.'\n      )\n    }\n  }\n\n  multiStepPlugin.library = (node: FormKitNode) => {\n    switch (node.props.type) {\n      case 'multi-step':\n        return node.define(multiStep)\n      case 'step':\n        const isInvalid =\n          !node.parent || node.parent.props.type !== 'multi-step'\n        if (isInvalid) {\n          console.warn(\n            'Invalid use of <FormKit type=\"step\">. <FormKit type=\"step\"> must be an immediate child of a <FormKit type=\"multi-step\"> component.'\n          )\n        }\n        return node.define(step)\n    }\n  }\n\n  return multiStepPlugin\n}\n","import { FormKitTypeDefinition } from '@formkit/core'\nimport { $if, defaultIcon, localize, disablesChildren } from '@formkit/inputs'\nimport {\n  wrapper,\n  badge,\n  stepPrevious,\n  stepNext,\n  stepOuter,\n  tab,\n  tabLabel,\n  tabs,\n  steps,\n  stepActions,\n  stepInner,\n  stepIcon,\n  multiStepOuter,\n} from './sections'\n\nexport const multiStep: FormKitTypeDefinition = {\n  /**\n   * The actual schema of the input, or a function that returns the schema.\n   */\n  schema: multiStepOuter(\n    wrapper(\n      tabs(\n        tab(\n          $if(\n            '$tabStyle === \"tab\" || ($tabStyle === \"progress\" && $hideProgressLabels === false)',\n            tabLabel('$step.stepName')\n          ),\n          $if(\n            '($step.totalErrorCount > 0) && $step.showStepErrors',\n            badge('$step.totalErrorCount')\n          ),\n          $if(\n            '$step.isValid && $step.hasBeenVisited',\n            badge(stepIcon('validStep'))\n          )\n        )\n      ),\n      steps('$slots.default')\n    )\n  ),\n  /**\n   * The type of node, can be a list, group, or input.\n   */\n  type: 'group',\n  /**\n   * The family of inputs this one belongs too. For example \"text\" and \"email\"\n   * are both part of the \"text\" family. This is primary used for styling.\n   */\n  family: 'multi-step',\n  /**\n   * An array of extra props to accept for this input.\n   */\n  props: [\n    'allowIncomplete',\n    'hideProgressLabels',\n    'tabStyle',\n    'beforeStepChange',\n    'validStepIcon',\n  ],\n  /**\n   * Additional features that should be added to your input\n   */\n  features: [defaultIcon('validStep', 'check'), disablesChildren],\n}\n\nexport const step: FormKitTypeDefinition = {\n  /**\n   * The actual schema of the input, or a function that returns the schema.\n   */\n  schema: stepOuter(\n    stepInner('$slots.default'),\n    stepActions(stepPrevious(), stepNext())\n  ),\n  /**\n   * The type of node, can be a list, group, or input.\n   */\n  type: 'group',\n  /**\n   * The family of inputs this one belongs too. For example \"text\" and \"email\"\n   * are both part of the \"text\" family. This is primary used for styling.\n   */\n  family: '',\n  /**\n   * An array of extra props to accept for this input.\n   */\n  props: [\n    'previousLabel',\n    'nextLabel',\n    'beforeStepChange',\n    'previousAttrs',\n    'nextAttrs',\n    'validStepIcon',\n  ],\n  /**\n   * Additional features that should be added to your input\n   */\n  features: [localize('next'), localize('prev'), disablesChildren],\n}\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Wrapper section, wraps the entire multi-step form\n *\n * @public\n */\nexport const wrapper = createSection('wrapper', () => ({\n  $el: 'div',\n  attrs: {\n    'data-tab-style': '$tabStyle',\n    'data-hide-labels': '$hideProgressLabels',\n  },\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Contains the \"next\" action element for a multi-step step.\n *\n * @public\n */\nexport const badge = createSection('badge', () => ({\n  $el: 'span',\n  attrs: {\n    role: 'presentation',\n  },\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Contains the action buttons for a multi-step step.\n *\n * @public\n */\nexport const stepActions = createSection('stepActions', () => ({\n  $el: 'div',\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Inner section of a multi-step step.\n *\n * @public\n */\nexport const stepInner = createSection('stepInner', 'div')\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Contains the \"next\" action element for a multi-step step.\n *\n * @public\n */\nexport const stepNext = createSection('stepNext', () => ({\n  $el: 'div',\n  if: '$isLastStep === false || $stepIndex === 0',\n  children: [\n    {\n      $cmp: 'FormKit',\n      bind: '$nextAttrs',\n      props: {\n        type: 'button',\n        label: {\n          if: '$nextLabel',\n          then: '$nextLabel',\n          else: '$ui.next.value',\n        },\n        'data-next': '$isLastStep === false',\n        onClick: '$handlers.next',\n      },\n    },\n  ],\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Outer section of a multi-step step. Has conditinal styling\n * depending on if it's the $activeStep.\n *\n * @public\n */\nexport const stepOuter = createSection('stepOuter', () => ({\n  $el: 'div',\n  attrs: {\n    key: '$id',\n    'data-type': 'step',\n    'data-disabled': '$disabled || undefined',\n    'data-invalid':\n      '$state.valid === false && $state.validationVisible || undefined',\n    'data-errors': '$state.errors || undefined',\n    'data-submitted': '$state.submitted || undefined',\n    id: '$id',\n    role: 'tabpanel',\n    'aria-labelledby': '$node.parent.props.id + \"_tab_\" + $stepIndex',\n    class: '$classes.step',\n    hidden: '$isActiveStep === false || undefined',\n  },\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Contains the \"previous\" action element for a multi-step step.\n *\n * @public\n */\nexport const stepPrevious = createSection('stepPrevious', () => ({\n  $el: 'div',\n  if: '$isFirstStep === false',\n  children: [\n    {\n      $cmp: 'FormKit',\n      bind: '$previousAttrs',\n      props: {\n        type: 'button',\n        label: {\n          if: '$previousLabel',\n          then: '$previousLabel',\n          else: '$ui.prev.value',\n        },\n        'data-prev': '$isFirstStep === false',\n        onClick: '$handlers.previous',\n      },\n    },\n  ],\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Steps section, wraps all the steps of a multi-step form\n *\n * @public\n */\nexport const steps = createSection('steps', () => ({\n  $el: 'div',\n}))\n","import { createSection, FormKitSchemaExtendableSection } from '@formkit/inputs'\n\n/**\n * Icon section used by multi-step steps\n *\n * @public\n */\nexport const stepIcon = (\n  sectionKey: string,\n  el?: string\n): FormKitSchemaExtendableSection => {\n  return createSection(`${sectionKey}Icon`, () => {\n    const rawIconProp = `_raw${sectionKey\n      .charAt(0)\n      .toUpperCase()}${sectionKey.slice(1)}Icon`\n    return {\n      if: `$step.${sectionKey}Icon && $step.${rawIconProp}`,\n      then: {\n        $el: `${el ? el : 'span'}`,\n        attrs: {\n          class: `$classes.${sectionKey}Icon + \" formkit-icon\"`,\n          innerHTML: `$step.${rawIconProp}`,\n          role: 'presentation',\n          onClick: `$handlers.iconClick(${sectionKey})`,\n        },\n      },\n      else: {\n        if: `$${sectionKey}Icon && $${rawIconProp}`,\n        then: {\n          $el: `${el ? el : 'span'}`,\n          attrs: {\n            class: `$classes.${sectionKey}Icon + \" formkit-icon\"`,\n            innerHTML: `$${rawIconProp}`,\n            role: 'presentation',\n            onClick: `$handlers.iconClick(${sectionKey})`,\n          },\n        },\n      },\n    }\n  })()\n}\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Tab section, holds a group of tabs\n *\n * @public\n */\nexport const tab = createSection('tab', () => ({\n  $el: 'button',\n  for: ['step', 'index', '$fns.getSteps()'],\n  attrs: {\n    key: '$step.id',\n    type: 'button',\n    onClick: '$step.makeActive',\n    'data-active': '$step.isActiveStep',\n    'data-valid': '$step.isValid',\n    'data-visited': '$step.hasBeenVisited',\n    role: 'tab',\n    id: '$id + \"_tab_\" + $index',\n    'aria-selected': '$step.isActiveStep || false',\n    'aria-controls': '$step.id',\n    tabindex: {\n      if: '$step.isActiveStep',\n      then: '0',\n      else: '-1',\n    },\n  },\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * the label for a tab in a multi-step input\n *\n * @public\n */\nexport const tabLabel = createSection('tabLabel', () => ({\n  $el: 'span',\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Tab section, holds a group of tabs\n *\n * @public\n */\nexport const tabs = createSection('tabs', () => ({\n  $el: 'div',\n  attrs: {\n    role: 'tablist',\n  },\n}))\n","import { createSection } from '@formkit/inputs'\n\n/**\n * Outer section of the multi-step where most data attributes are assigned.\n *\n * @public\n */\nexport const multiStepOuter = createSection('multiStepOuter', () => ({\n  $el: 'div',\n  attrs: {\n    key: '$id',\n    id: '$id',\n    class: '$classes.outer',\n    'data-prerender': '$fns.preRenderSteps()',\n    'data-family': '$family || undefined',\n    'data-type': '$type',\n    'data-multiple':\n      '$attrs.multiple || ($type != \"select\" && $options != undefined) || undefined',\n    'data-disabled': '$disabled || undefined',\n    'data-invalid':\n      '$state.valid === false && $state.validationVisible || undefined',\n    'data-errors': '$state.errors || undefined',\n    'data-submitted': '$state.submitted || undefined',\n  },\n}))\n","import {\n  FormKitNode,\n  FormKitPlugin,\n  FormKitSectionsSchema,\n} from '@formkit/core'\nimport { clone, whenAvailable } from '@formkit/utils'\nimport { findSection } from '@formkit/inputs'\n\n/**\n * The options to be passed to {@link createFloatingLabelsPlugin | createFloatingLabelsPlugin}\n *\n * @public\n */\nexport interface FloatingLabelsOptions {\n  useAsDefault?: boolean\n}\n\n/**\n * Traverses through parent elements to find the next closest non-transparent assigned background color\n * @param element - The element to start the search from\n */\nfunction findParentWithBackgroundColor(element: HTMLElement): string {\n  let backgroundColor = 'white'\n  while (backgroundColor === 'white' && element.parentElement) {\n    element = element.parentElement\n    const style = window.getComputedStyle(element)\n    const bgColor = style.backgroundColor\n\n    if (\n      bgColor &&\n      bgColor !== 'rgba(0, 0, 0, 0)' &&\n      bgColor !== 'transparent'\n    ) {\n      backgroundColor = bgColor\n    }\n    // Check if the color uses CSS variable for opacity\n    const opacityMatch = backgroundColor.match(/var\\(([^)]+)\\)/)\n    if (opacityMatch) {\n      const opacityVar = opacityMatch[1]\n      const opacity =\n        getComputedStyle(document.documentElement)\n          .getPropertyValue(opacityVar)\n          .trim() || '1'\n      backgroundColor = `rgba(${bgColor}, ${opacity})`\n    }\n  }\n  return backgroundColor\n}\n\n/**\n * Sets the background color of the label to the background color of the parent element\n * @param node - The node to set the background color for\n * @param nodeRoot - The root node to start the search from\n * @param timeout - The timeout to wait for the background color to be set\n */\nfunction setBackgroundColor(\n  node: FormKitNode,\n  nodeRoot: HTMLElement,\n  timeout: number\n) {\n  setTimeout(() => {\n    node.props._labelBackgroundColor = findParentWithBackgroundColor(nodeRoot)\n  }, timeout)\n}\n\n/**\n * Creates a new floating label plugin.\n *\n * @param FloatingLabelsOptions - The options of {@link FloatingLabelsOptions | FloatingLabelsOptions} to pass to the plugin\n *\n * @returns A {@link @formkit/core#FormKitPlugin | FormKitPlugin}\n *\n * @public\n */\nexport function createFloatingLabelsPlugin(\n  FloatingLabelsOptions?: FloatingLabelsOptions\n): FormKitPlugin {\n  const floatingLabelsPlugin = (node: FormKitNode) => {\n    let nodeEl: HTMLElement | null = null\n    node.addProps({\n      floatingLabel: {\n        boolean: true,\n        default: !!FloatingLabelsOptions?.useAsDefault,\n      },\n      _labelBackgroundColor: {},\n      _labelOffset: {},\n      _offsetCalculated: {},\n    })\n\n    const useFloatingLabels = node.props.floatingLabel\n\n    if (useFloatingLabels && node.context) {\n      node.on('created', () => {\n        if (!node.props || !node.props.definition || !node.context) return\n\n        // available for users who want to update the background color manually\n        node.context.handlers.updateLabelBackgroundColor = () => {\n          if (!node.context || !nodeEl) return\n          setBackgroundColor(node, nodeEl, 0)\n        }\n\n        const inputDefinition = clone(node.props.definition)\n        if (\n          ['text', 'dropdown'].includes(node.props.family) ||\n          ['datepicker', 'textarea'].includes(node.props.type)\n        ) {\n          const originalSchema = inputDefinition.schema\n          if (typeof originalSchema !== 'function') return\n          const higherOrderSchema = (extensions: FormKitSectionsSchema) => {\n            extensions.outer = {\n              attrs: {\n                'data-floating-label': 'true',\n              },\n            }\n            extensions.label = {\n              attrs: {\n                style: {\n                  if: '$_offsetCalculated',\n                  then: '$: \"background-color: \" + $_labelBackgroundColor + \"; left: \" + $_labelOffset + \";\"',\n                  else: '$: \"transition: none; background-color: \" + $_labelBackgroundColor + \"; left: \" + $_labelOffset + \";\"',\n                },\n              },\n            }\n\n            const inputSchema = originalSchema(extensions)\n            const finalSchema = Array.isArray(inputSchema)\n              ? inputSchema[0]\n              : inputSchema\n            const [labelParentChildren, labelSection] = findSection(\n              finalSchema,\n              'label'\n            )\n            const targetSection =\n              node.props.type === 'dropdown' ? 'selector' : 'input'\n            const [inputParentChildren] = findSection(\n              finalSchema,\n              targetSection\n            )\n\n            if (\n              Array.isArray(labelParentChildren) &&\n              labelSection &&\n              Array.isArray(inputParentChildren)\n            ) {\n              labelParentChildren.splice(\n                labelParentChildren.indexOf(labelSection),\n                1\n              )\n              inputParentChildren.push(labelSection)\n            }\n\n            return inputSchema\n          }\n\n          inputDefinition.schema = higherOrderSchema\n          if (inputDefinition.schemaMemoKey) {\n            inputDefinition.schemaMemoKey += '-floating-label'\n          }\n          node.props.definition = inputDefinition\n        }\n      })\n\n      node.on('mounted', () => {\n        if (!node.context) return\n\n        // set a mutation observer on the nodeEl parent to refire calculateLabelOffset\n        // whenever the children are changed\n        const observer = new MutationObserver(() => {\n          if (!nodeEl) return\n          calculateLabelOffset(node, nodeEl)\n\n          // delay the enabling of animations until after\n          // initial label positions are set\n          setTimeout(() => {\n            node.props._offsetCalculated = true\n          }, 100)\n        })\n\n        whenAvailable(node.context.id, () => {\n          if (!node.context) return\n          nodeEl = document.getElementById(node.context?.id)\n          if (!nodeEl) return\n          setBackgroundColor(node, nodeEl, 100)\n          observer.observe(nodeEl.parentNode as Node, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n          })\n        })\n      })\n\n      function calculateLabelOffset(node: FormKitNode, nodeEl: HTMLElement) {\n        const labelEl = nodeEl.parentNode?.querySelector('.formkit-label')\n        const left = nodeEl.offsetLeft\n        const style = window.getComputedStyle(nodeEl)\n        const paddingLeft = parseInt(style.paddingLeft, 10)\n        const offset = left + paddingLeft\n\n        if (labelEl && offset) {\n          node.props._labelOffset = `calc(${offset}px - 0.25em)`\n        }\n      }\n    }\n  }\n  return floatingLabelsPlugin\n}\n","import { FormKitNode, FormKitPlugin } from '@formkit/core'\nimport { undefine } from '@formkit/utils'\n\n/**\n * The options to be passed to {@link createLocalStoragePlugin | createLocalStoragePlugin}\n *\n * @param prefix - The prefix to use for the local storage key\n * @param key - The key to use for the local storage entry, useful for scoping data per user\n * @param control - The form control to use enable or disable saving to localStorage. Must return a boolean value.\n * @param maxAge - The maximum age of the local storage entry in milliseconds\n * @param debounce - The debounce time in milliseconds to use when saving to localStorage\n * @param beforeSave - A function to call for modifying data before saving to localStorage\n * @param beforeLoad - A function to call for modifying data before loading from localStorage\n * @param clearOnSubmit - On submission of the form clear the local storage key. Defaults to true.\n *\n * @public\n */\nexport interface LocalStorageOptions {\n  prefix?: string\n  key?: string | number\n  control?: string\n  maxAge?: number\n  debounce?: number\n  beforeSave?: (payload: any) => any\n  beforeLoad?: (payload: any) => any\n  clearOnSubmit?: boolean\n}\n\n/**\n * Creates a new save-to-local-storage plugin.\n *\n * @param LocalStorageOptions - The options of {@link LocalStorageOptions | LocalStorageOptions} to pass to the plugin\n *\n * @returns A {@link @formkit/core#FormKitPlugin | FormKitPlugin}\n *\n * @public\n */\nexport function createLocalStoragePlugin(\n  localStorageOptions?: LocalStorageOptions\n): FormKitPlugin {\n  const localStoragePlugin = (node: FormKitNode) => {\n    // only apply if internal FormKit type is 'group'. This applies\n    // to 'form' and 'group' inputs — as well as any add-on inputs\n    // registered of FormKit type 'group' (eg. 'multi-step').\n    if (node.type !== 'group') return\n    \n    // enable SSR support\n    if (typeof window === \"undefined\") return\n\n    let cachedLocalStorageData: string | null = ''\n\n    const shouldUseLocalStorage = (controlNode: FormKitNode | undefined) => {\n      let controlFieldValue = true\n      if (controlNode) {\n        controlFieldValue = controlNode.value === true\n      }\n      return undefine(node.props.useLocalStorage) && controlFieldValue\n    }\n\n    node.on('created', async () => {\n      await node.settled\n\n      node.addProps(['useLocalStorage'])\n      node.extend('restoreCache', {\n        get: (node) => async () => {\n          if (!cachedLocalStorageData) return\n          await node.settled\n          loadValue(cachedLocalStorageData)\n        },\n        set: false,\n      })\n\n      // if the user provided a control field, then we need to listen for changes\n      // and use it to determine whether or not to use local storage\n      const controlField = localStorageOptions?.control ?? undefined\n      let controlNode: FormKitNode | undefined\n      if (typeof controlField === 'string') {\n        const controlNode = node.at(controlField)\n        if (controlNode) {\n          controlNode.on('commit', () => {\n            useLocalStorage = shouldUseLocalStorage(controlNode)\n            if (!useLocalStorage) {\n              localStorage.removeItem(storageKey)\n            }\n          })\n        }\n      }\n\n      let useLocalStorage = shouldUseLocalStorage(controlNode)\n      let saveTimeout: ReturnType<typeof setTimeout> | number = 0\n      const debounce =\n        typeof localStorageOptions?.debounce === 'number'\n          ? localStorageOptions.debounce\n          : 200\n      const prefix = localStorageOptions?.prefix ?? 'formkit'\n      const maxAge = localStorageOptions?.maxAge ?? 3600000 // 1 hour\n      const key = localStorageOptions?.key ? `-${localStorageOptions.key}` : '' // for scoping to a specific user\n      const storageKey = `${prefix}${key}-${node.name}`\n      const clearOnSubmit = localStorageOptions?.clearOnSubmit ?? true\n\n      const loadValue = async (forceValue?: string) => {\n        const value = forceValue || localStorage.getItem(storageKey)\n        if (!value) return\n        const loadValue = JSON.parse(value)\n        if (typeof localStorageOptions?.beforeLoad === 'function') {\n          node.props.disabled = true\n          try {\n            loadValue.data = await localStorageOptions.beforeLoad(\n              loadValue.data\n            )\n          } catch (error) {\n            console.error(error)\n          }\n          node.props.disabled = false\n        }\n        if (!loadValue || typeof loadValue.data !== 'object') return\n        if (loadValue.maxAge > Date.now()) {\n          node.input(loadValue.data, false)\n        } else {\n          localStorage.removeItem(storageKey)\n        }\n      }\n\n      const saveValue = async (payload: unknown) => {\n        let savePayload = payload\n        if (typeof localStorageOptions?.beforeSave === 'function') {\n          try {\n            savePayload = await localStorageOptions.beforeSave(payload)\n          } catch (error) {\n            console.error(error)\n          }\n        }\n\n        if (!savePayload) return\n\n        localStorage.setItem(\n          storageKey,\n          JSON.stringify({\n            maxAge: Date.now() + maxAge,\n            data: savePayload,\n          })\n        )\n      }\n\n      node.on('commit', ({ payload }) => {\n        if (!useLocalStorage) return\n        // debounce the save to local storage\n        clearTimeout(saveTimeout)\n        saveTimeout = setTimeout(async () => {\n          saveValue(payload)\n        }, debounce)\n      })\n\n      node.on('prop:useLocalStorage', () => {\n        useLocalStorage = shouldUseLocalStorage(controlNode)\n        if (!useLocalStorage) {\n          localStorage.removeItem(storageKey)\n        }\n      })\n\n      if (clearOnSubmit) {\n        node.hook.submit((payload, next) => {\n          // cache data in case the user wants to restore\n          cachedLocalStorageData = localStorage.getItem(storageKey)\n          // remove from the localStorage cache\n          localStorage.removeItem(storageKey)\n          return next(payload)\n        })\n      }\n\n      await loadValue()\n    })\n  }\n  return localStoragePlugin\n}\n","import { FormKitNode, FormKitPlugin } from '@formkit/core'\nimport { undefine, whenAvailable } from '@formkit/utils'\n\n/**\n * Creates a new auto-height textarea plugin.\n *\n * @returns A {@link @formkit/core#FormKitPlugin | FormKitPlugin}\n *\n * @public\n */\nexport function createAutoHeightTextareaPlugin(): FormKitPlugin {\n  const autoHeightTextareaPlugin = (node: FormKitNode) => {\n    if (node.props.type !== 'textarea') return\n    node.addProps(['autoHeight', 'maxAutoHeight'])\n\n    node.on('mounted', () => {\n      const autoHeight = undefine(node.props.autoHeight)\n      const maxAutoHeight = Number.isFinite(node.props.maxAutoHeight)\n        ? parseInt(node.props.maxAutoHeight)\n        : undefined\n      if (!autoHeight || !node.context) return\n      let inputElement: HTMLElement | undefined | null = null\n\n      whenAvailable(\n        node.context.id,\n        () => {\n          inputElement = node.props.__root?.getElementById(\n            node?.context?.id ? node.context.id : ''\n          )\n          if (!(inputElement instanceof HTMLTextAreaElement)) return\n\n          if (!document.getElementById('formkit-auto-height-textarea-style')) {\n            const scrollbarStyle = document.createElement('style')\n            scrollbarStyle.setAttribute(\n              'id',\n              'formkit-auto-height-textarea-style'\n            )\n            scrollbarStyle.textContent = `.formkit-auto-height-textarea { scrollbar-width: none; } .formkit-auto-height-textarea::-webkit-scrollbar { display: none; }`\n            document.body.appendChild(scrollbarStyle)\n          }\n\n          const hiddenTextarea = inputElement.cloneNode(\n            false\n          ) as HTMLTextAreaElement\n          hiddenTextarea.classList.add('formkit-auto-height-textarea')\n          if (!maxAutoHeight) {\n            inputElement.classList.add('formkit-auto-height-textarea')\n          }\n\n          hiddenTextarea.setAttribute(\n            'style',\n            'height: 0; min-height: 0; pointer-events: none; opacity: 0;  left: -9999px; padding-top: 0; padding-bottom: 0; position: absolute; display: block; top: 0; z-index: -1; scrollbar-width: none;'\n          )\n\n          hiddenTextarea.setAttribute('aria-hidden', 'true')\n          hiddenTextarea.setAttribute('tabindex', '-1')\n\n          hiddenTextarea.removeAttribute('name')\n          hiddenTextarea.removeAttribute('id')\n          hiddenTextarea.removeAttribute('aria-describedby')\n\n          const isBorderBox =\n            getComputedStyle(inputElement).boxSizing === 'border-box'\n          const paddingY =\n            parseInt(getComputedStyle(inputElement).paddingTop) +\n            parseInt(getComputedStyle(inputElement).paddingBottom)\n\n          const paddingX =\n            parseInt(getComputedStyle(inputElement).paddingTop) +\n            parseInt(getComputedStyle(inputElement).paddingBottom)\n          let lastValue = node._value\n\n          inputElement.after(hiddenTextarea)\n          calculateHeight({ payload: node._value as string })\n\n          node.on('input', calculateHeight)\n          async function calculateHeight({ payload }: { payload: string }) {\n            lastValue = payload\n            if (!inputElement) return\n            await new Promise((r) => setTimeout(r, 10))\n\n            // If the current value is not the one we enqueued, just ignore.\n            if (lastValue !== payload) return\n\n            hiddenTextarea.value = payload\n\n            const width = isBorderBox\n              ? inputElement.offsetWidth\n              : inputElement.offsetWidth - paddingX\n            hiddenTextarea.style.width = `${width}px`\n\n            const scrollHeight = hiddenTextarea.scrollHeight\n            const height = isBorderBox ? scrollHeight + paddingY : scrollHeight\n            const h = maxAutoHeight ? Math.min(height, maxAutoHeight) : height\n            if (!inputElement.style.height) {\n              inputElement.style.height = `0px`\n            }\n            inputElement.style.minHeight = `${h}px`\n          }\n        },\n        node.props.__root\n      )\n    })\n  }\n\n  return autoHeightTextareaPlugin\n}\n"]}