export declare const supportedAgents: readonly ["claude", "codex", "copilot", "cursor", "gemini"];
export type Agent = (typeof supportedAgents)[number];
export declare const agentDisplayMap: Record<Agent, string>;
export type AgentConfiguration = {
    rules: boolean;
    mcp: boolean;
    rulesPath: string;
    mcpPath: string | null;
    outdated: boolean;
    disabled?: boolean;
};
export declare function getAgentConfigurations(agentsToConsider: Agent[], workspaceRoot: string): Promise<{
    nonConfiguredAgents: Agent[];
    partiallyConfiguredAgents: Agent[];
    fullyConfiguredAgents: Agent[];
    disabledAgents: Agent[];
    agentConfigurations: Map<Agent, AgentConfiguration>;
}>;
export declare function configureAgents(agents: Agent[], workspaceRoot: string, useLatest?: boolean): Promise<void>;
//# sourceMappingURL=utils.d.ts.map